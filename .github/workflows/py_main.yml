name: Python - Lint, Build, Test

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - 'python/**'
  pull_request:
    branches: ["main"]
    paths:
      - 'python/**'

defaults:
  run:
    working-directory: python

jobs:
  main:
    timeout-minutes: 20
    name: Lint & Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --all-extras
      - name: Code Lint
        run: poetry run poe lint
      - name: Type check task with mypy
        run: poetry run poe type-check --show-error-context --pretty
      - name: Code Format
        run: poetry run poe format
      - name: Commits Lint
        run: poetry run cz check --rev-range HEAD~1..HEAD
      - name: Documentation - code snippet embeddings
        run: poetry run poe docs --type check
      - name: Build
        run: poetry build
      - name: Unit Tests
        run: poetry run poe test --type unit
      - name: E2E Tests
        run: poetry run poe test --type e2e
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - name: Check Copyright Header
        run: poetry run poe copyright --type check
  pytest:
    timeout-minutes: 20
    name: Run All Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --all-extras
      - name: Build
        run: poetry build
      - name: Install ollama
        run: curl -fsSL https://ollama.com/install.sh | sh
      - name: Run ollama
        run: |
          ollama serve &
          ollama pull llama3.1
          ollama pull granite3.1-dense:8b
      - name: Call ollama API
        run: |
          curl -d '{"model": "llama3.1:latest", "stream": false, "prompt":"Whatever I say, asnwer with Yes"}' http://localhost:11434/api/generate
      - name: Run Integration Tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_SEARCH_CSE_ID }}
          # AZURE_OPENAI_API_ENDPOINT: ${{ secrets.AZURE_OPENAI_API_ENDPOINT }}
          # AZURE_OPENAI_API_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_API_DEPLOYMENT }}
          # AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          # AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}
          WATSONX_API_KEY: ${{ secrets.WATSONX_API_KEY }}
          WATSONX_PROJECT_ID: ${{ secrets.WATSONX_PROJECT_ID }}
          WATSONX_REGION: ${{ secrets.WATSONX_REGION }}
          # WATSONX_SPACE_ID: ${{ secrets.WATSONX_SPACE_ID }}
          # WATSONX_DEPLOYMENT_ID: ${{ secrets.WATSONX_DEPLOYMENT_ID }}
        run: poetry run poe test --type integration
